
syntax = "proto3";
import "google/protobuf/empty.proto";
package withdrawals_flows;


enum WithdrawalStatus{
    Pending = 0;
    Processed = 1;
    Canceled = 2;
}

message RegisterWithdrawalRequest {
    string ProcessId = 1;
    string TraderId = 2;
    string AccountId = 3;
    string PaymentSystemCredentials = 4;
    double WithdrawalAmount = 5;
    string Who = 6;

}

enum RegisterWithdrawalStatus{
    ReservedOk = 0;
    NotEnoughFundsToReserveFunds = 1;
}

message RegisterWithdrawalResponse {
    RegisterWithdrawalStatus Status = 1;
    optional WithdrawalGrpcModel Model = 2;
}

message WithdrawalGrpcModel{
    string Id = 1;
    string TraderId = 2;

    int64 CreatedAt = 3;

    string AccountId = 4;
    double Amount = 5;
    string WithdrawalCredentials = 6;

    int64 ProcessedAsOkAt = 7;
    int64 CanceledAt = 8;
}

message GetActiveWithdrawalsRequest {
    optional string TraderId = 1;
    optional string AccountId = 2;
}

message CancelActiveWithdrawalRequest {
    string ProcessId = 1;
    string TraderId = 2;
    string AccountId = 3;
    string Id = 4;
    string Who = 5;
}

enum CancelWithdrawalStatus{
    CanceledOk = 0;
    WithdrawalNotFoundToCancel = 1;
    CanNotCancelWithdrawalIsAlreadyProcessed = 2;
    CanNotCancelWithdrawalIsAlreadyCanceled = 3;
}

message CancelActiveWithdrawalResponse{
    CancelWithdrawalStatus Status = 1;
    WithdrawalGrpcModel Model = 2;
}

message ProcessActiveWithdrawalRequest {
    string ProcessId = 1;
    string TraderId = 2;
    string AccountId = 3;
    string Id = 4;
    string Who = 5;
}


enum ProcessedWithdrawalStatus{
    ProcessedOk = 0;
    WithdrawalNotFoundToProcess = 1;
    CanNotProcessWithdrawalIsAlreadyProcessed = 2;
    CanNotProcessWithdrawalIsAlreadyCanceled = 3;
}

message ProcessActiveWithdrawalResponse{
    ProcessedWithdrawalStatus Status = 1;
    WithdrawalGrpcModel Model = 2;
}

service WithdrawalFlowsService {
    rpc Register(RegisterWithdrawalRequest) returns (RegisterWithdrawalResponse);
    rpc GetActiveWithdrawals(GetActiveWithdrawalsRequest) returns (stream WithdrawalGrpcModel);
    rpc CancelActiveWithdrawal(CancelActiveWithdrawalRequest) returns (CancelActiveWithdrawalResponse);
    rpc ProcessActiveWithdrawal(ProcessActiveWithdrawalRequest) returns (ProcessActiveWithdrawalResponse);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
 }