syntax = "proto3";
package cross_margin_engine_persistence;
import "google/protobuf/empty.proto";

enum CrossMarginPersistencePositionSide{
    Buy = 0;
    Sell = 1;
}

message CrossMarginPersistenceBidAsk{
    string AssetPair = 1;
    double Bid = 2;
    double Ask = 3;
    uint64 DateTimeUnixTimestampMilis = 4;
    string Base = 5;
    string Quote = 6;
}

message CrossMarginPositionSwapGrpcModel{
    double Amount = 1;
    uint64 Date = 2;
}

message CrossMarginPersistenceActivePositionGrpcModel{
    string Id = 1;
    string TraderId = 2;
    string AccountId = 3;
    string AssetPair = 4;
    CrossMarginPersistencePositionSide Side = 5;
    double ContractSize = 6;
    double LostAmount = 7;
    string CreateProcessId = 8;
    uint64 CreateDateUnixTimestampMilis = 9;
    string LastUpdateProcessId = 10;
    uint64 LastUpdateDate = 11;
    double Leverage = 12;
    string Base = 13;
    string Quote = 14;
    string Collateral = 15;

    map<string, string> Metadata = 16;

    string OpenProcessId = 17;
    uint64 OpenDate = 18;
    CrossMarginPersistenceBidAsk OpenBidAsk = 19;
    double OpenPrice = 20;
    CrossMarginPersistenceBidAsk MarginBidAsk = 21;
    double MarginPrice = 22;
}

// message CrossMarginPersistencePendingPositionGrpcModel{
//     string Id = 1;
//     string AccountId = 2;
//     string TraderId = 3;
//     string AssetPair = 4;
//     CrossMarginPersistencePositionSide Side = 5;
//     double InvestAmount = 6;
//     double Leverage = 7;
//     double StopOutPercent = 8;
//     string CreateProcessId = 9;
//     uint64 CreateDateUnixTimestampMilis = 10;
//     string LastUpdateProcessId = 11;
//     uint64 LastUpdateDate = 12;
//     optional double TpInProfit = 13;
//     optional double SlInProfit = 14;
//     optional double TpInAssetPrice = 15;
//     optional double SlInAssetPrice = 16;
//     string Collateral = 17;
//     string Base = 18;
//     string Quote = 19;
//     double DesirePrice = 20;

//     optional double ToppingUpPercent = 21;
//     map<string, string> Metadata = 22;
//     optional double MarginCallPercent = 23;
// }

service PositionManagerPersistenceGrpcService {
    rpc GetActivePositions(google.protobuf.Empty) returns (stream CrossMarginPersistenceActivePositionGrpcModel);
    // rpc GetPendingPositions(google.protobuf.Empty) returns (stream CrossMarginPersistencePendingPositionGrpcModel);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
