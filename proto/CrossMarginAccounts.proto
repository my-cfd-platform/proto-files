syntax = "proto3";
package cross_margin_accounts;
import "google/protobuf/empty.proto";

enum CrossMarginAccountsOperationsCodes{
    Ok = 0;
    AccountNotFound = 1;
    TraderNotFound = 2;
    NotEnoughBalance = 3;
    ProcessIdDuplicate = 4;
    CollateralCurrencyNotFound = 5;
    InvalidLeverage = 6;
}

message CrossMarginAccountGrpcModel{
    string Id = 1;
    string TraderId = 2;
    string Currency = 3;
    double Balance = 4;
    double Equity = 5;
    double Margin = 6;
    bool TradingDisabled = 7;
    double Leverage = 8;
    double FreeMargin = 9;
    double MarginLvl = 10;
    string TradingGroup = 11;
    uint64 DateCreate = 12;
    uint64 DateUpdate = 13;
    string CreateProcessId = 14;
    string LastUpdateProcessId = 15;
    map<string, string> Metadata = 16;
}

message CrossMarginAccountsCreateAccountGrpcRequest{
    string TraderId = 1;
    string Currency = 2;
    string ProcessId = 3;
    string TradingGroup = 4;
    map<string, string> Metadata = 5;
}


message GetTraderAccountsGrpcRequest{
    string TraderId = 1;
}

message GetTraderAccountGrpcRequest{
    string TraderId = 1;
    string AccountId = 2;
}

message GetTraderAccountGrpcResponse{
    CrossMarginAccountGrpcModel Account = 1;
}

message UpdateAccountGrpcRequest{
    string TraderId = 1;
    string AccountId = 2;
    optional bool TradingDisabled = 3;
    optional string TradingGroup = 4;
    optional double Leverage = 5;
    string ProcessId = 6;
}

message CrossMarginUpdateAccountGrpcResponse{
    CrossMarginAccountsOperationsCodes Status = 1;
    optional CrossMarginAccountGrpcModel Account = 2;
}

message CreateAccountGrpcRequest{
    string TraderId = 1;
    string AccountId = 2;
    double Leverage = 3;
    string Currency = 4;
    string ProcessId = 5;
    string TradingGroup = 6;
    map<string, string> Metadata = 7;
}

message UpdateAccountBalanceGrpcRequest{
    string TraderId = 1;
     string AccountId = 2;
     double Delta = 3;
     string Comment = 4;
     string ProcessId = 5;
     bool AllowNegativeBalance = 6;
     UpdateBalanceReason Reason = 7;
     optional string ReferenceTransactionId = 8;
     bool SameResponseProcessId = 9;

}

enum UpdateBalanceReason {
    TradingResult = 0;
    BalanceCorrection = 1;
    Deposit = 2;
    Withdrawal = 3;
    WithdrawalCanceled = 4;
    ToppingUp = 5;
    Dividends = 6;
    Bonus = 7;
    Credit = 8;
    Voucher = 9;
}


message UpdateAccountBalanceGrpcResponse{
    CrossMarginAccountsOperationsCodes Result = 1;
    optional string OperationId = 2;
    CrossMarginAccountGrpcModel Account = 3;
}

service CrossMarginAccountsGrpcService{
    rpc CreateAccount(CreateAccountGrpcRequest) returns (CrossMarginAccountGrpcModel);
    rpc GetAllAccounts(google.protobuf.Empty) returns (stream CrossMarginAccountGrpcModel);
    rpc GetClientAccount(GetTraderAccountGrpcRequest) returns (GetTraderAccountGrpcResponse);
    rpc GetClientAccounts(GetTraderAccountsGrpcRequest) returns (stream CrossMarginAccountGrpcModel);
    rpc UpdateAccount(UpdateAccountGrpcRequest) returns (CrossMarginUpdateAccountGrpcResponse);
    rpc UpdateBalance(UpdateAccountBalanceGrpcRequest) returns (UpdateAccountBalanceGrpcResponse);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}


